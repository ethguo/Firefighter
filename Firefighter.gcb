#chip 16f887, 8

#config MCLRE = ON

#define PWM_FREQ 16 'kHz

'===I/O PINS===
#define LINE_IN PORTB.0
#define WALL1_IN PORTE.0
#define WALL2_IN PORTE.1
#define FLAME_IN PORTE.2

#define LED0 PORTA.0
#define LED1 PORTA.1

#define FAN PORTC.0

#define M1B PORTD.0
#define M1F PORTD.1
#define M2B PORTD.2
#define M2F PORTD.3
#define M3B PORTD.4
#define M3F PORTD.5
#define M4B PORTD.6
#define M4F PORTD.7

'===LCD CONFIG===
#define LCD_IO 4
#define LCD_NO_RW
#define LCD_RS PORTA.2
#define LCD_Enable PORTA.3
#define LCD_DB4 PORTA.4
#define LCD_DB5 PORTA.5
#define LCD_DB6 PORTA.6
#define LCD_DB7 PORTA.7

'===I/O CONFIG===
DIR PORTA OUT
DIR PORTC.0 OUT
DIR PORTC.1 OUT
DIR PORTC.2 OUT
DIR PORTD OUT

DIR LINE_IN IN
DIR WALL1_IN IN
DIR WALL2_IN IN
DIR FLAME_IN IN


DIM Mode AS WORD

Mode = @Travel1

Cls

' Startup LED sequence
REPEAT 3
  Print "."
  SET LED0 ON
  SET LED1 OFF
  WAIT 333 ms
  SET LED0 OFF
  SET LED1 ON
  WAIT 333 ms
END REPEAT

Cls


HPWM 1, PWM_FREQ, 160
HPWM 2, PWM_FREQ, 160

'SET PORTC.1 ON
'SET PORTC.2 ON

DO FOREVER
  FOR clock = 0 to 255
    ReadWall1
    ReadWall2
    ReadFlame
    IF (clock & 0b00001111) = 0 THEN DisplaySensors
    IndCall Mode
    Wait 4 ms
  NEXT
LOOP

SUB ReadWall1
  adval = READAD(AN5, TRUE)
  wall1 = (6787 / (adval - 3) - 4) / 5
END SUB

SUB ReadWall2
  adval = READAD(AN6, TRUE)
  wall2 = (6787 / (adval - 3) - 4) / 5
END SUB

SUB ReadFlame
  flame = READAD(AN7, TRUE)
END SUB

SUB DisplaySensors
  LED1 = !LED1
  Cls

  Print "W1"
  PadNumber(wall1)
  Print wall1

  Locate 0,6
  Print "W2"
  PadNumber(wall2)
  Print wall2

  Locate 0,12
  Print "F"
  PadNumber(flame)
  Print flame
END SUB

SUB PadNumber(num)
  IF num < 100 THEN
    Print " "
  END IF
  IF num < 10 THEN
    Print " "
  END IF
END SUB


SUB Travel1
  PORTD = 0
  IF wall1 > 12 THEN
    M1F = 1
    M2F = 1
  END IF
  IF wall1 < 16 THEN
    M3B = 1
    M4B = 1
  END IF

END SUB
